#!/usr/bin/env python
#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from __future__ import print_function
from __future__ import absolute_import

import os
import sys

if (not sys.argv[0].endswith("par") and
    not sys.argv[0].endswith("xar") and
    os.getenv('PAR_UNPACK_TMP') == None):

    f = open(sys.argv[0], "r")

    f.readline() # This will be #!/bin/bash
    line = f.readline()
    f.close()

    # The par generator tool always has '# This par was made' as the
    # second line. See fbcode/tools/make_par/make_par.py
    if (not line.startswith('# This par was made')):
        print("""WARNING
        You are trying to run *-remote.py which is
        incorrect as the paths are not set up correctly.
        Instead, you should generate your fbthrift file with
        thrift_library and then run the resulting
        *-remote.par.
        For more information, please read
        http://fburl.com/python-remotes""")
        exit()

from . import GraphService
from . import ttypes

from nebula2.fbthrift.util.remote import Function
from nebula2.fbthrift.remote import Remote

FUNCTIONS = {
    'authenticate': Function('authenticate', 'GraphService', 'AuthResponse', [('string', 'username', 'string'), ('string', 'password', 'string')]),
    'signout': Function('signout', 'GraphService', None, [('i64', 'sessionId', 'i64')]),
    'execute': Function('execute', 'GraphService', 'ExecutionResponse', [('i64', 'sessionId', 'i64'), ('string', 'stmt', 'string')]),
    'executeJson': Function('executeJson', 'GraphService', 'string', [('i64', 'sessionId', 'i64'), ('string', 'stmt', 'string')]),
}

SERVICE_NAMES = ['GraphService', ]

if __name__ == '__main__':
    Remote.run(FUNCTIONS, SERVICE_NAMES, GraphService, ttypes, sys.argv, default_port=9090)
